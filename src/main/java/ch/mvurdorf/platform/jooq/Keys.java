/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq;


import ch.mvurdorf.platform.jooq.tables.Komposition;
import ch.mvurdorf.platform.jooq.tables.Login;
import ch.mvurdorf.platform.jooq.tables.Noten;
import ch.mvurdorf.platform.jooq.tables.records.KompositionRecord;
import ch.mvurdorf.platform.jooq.tables.records.LoginRecord;
import ch.mvurdorf.platform.jooq.tables.records.NotenRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<KompositionRecord> PK__KOMPOSITION = Internal.createUniqueKey(Komposition.KOMPOSITION, DSL.name("pk__komposition"), new TableField[] { Komposition.KOMPOSITION.ID }, true);
    public static final UniqueKey<LoginRecord> PK__LOGIN = Internal.createUniqueKey(Login.LOGIN, DSL.name("pk__login"), new TableField[] { Login.LOGIN.ID }, true);
    public static final UniqueKey<LoginRecord> UQ__LOGIN_EMAIL = Internal.createUniqueKey(Login.LOGIN, DSL.name("uq__login_email"), new TableField[] { Login.LOGIN.EMAIL }, true);
    public static final UniqueKey<NotenRecord> PK__NOTEN = Internal.createUniqueKey(Noten.NOTEN, DSL.name("pk__noten"), new TableField[] { Noten.NOTEN.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<NotenRecord, KompositionRecord> NOTEN__NOTEN_FK_KOMPOSITION_FKEY = Internal.createForeignKey(Noten.NOTEN, DSL.name("noten_fk_komposition_fkey"), new TableField[] { Noten.NOTEN.FK_KOMPOSITION }, Keys.PK__KOMPOSITION, new TableField[] { Komposition.KOMPOSITION.ID }, true);
}
