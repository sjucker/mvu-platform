/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotenPdf implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long fkKomposition;
    private String stimmlage;

    public NotenPdf() {}

    public NotenPdf(NotenPdf value) {
        this.id = value.id;
        this.fkKomposition = value.fkKomposition;
        this.stimmlage = value.stimmlage;
    }

    public NotenPdf(
        Long id,
        Long fkKomposition,
        String stimmlage
    ) {
        this.id = id;
        this.fkKomposition = fkKomposition;
        this.stimmlage = stimmlage;
    }

    /**
     * Getter for <code>public.noten_pdf.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.noten_pdf.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.noten_pdf.fk_komposition</code>.
     */
    public Long getFkKomposition() {
        return this.fkKomposition;
    }

    /**
     * Setter for <code>public.noten_pdf.fk_komposition</code>.
     */
    public void setFkKomposition(Long fkKomposition) {
        this.fkKomposition = fkKomposition;
    }

    /**
     * Getter for <code>public.noten_pdf.stimmlage</code>.
     */
    public String getStimmlage() {
        return this.stimmlage;
    }

    /**
     * Setter for <code>public.noten_pdf.stimmlage</code>.
     */
    public void setStimmlage(String stimmlage) {
        this.stimmlage = stimmlage;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NotenPdf other = (NotenPdf) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fkKomposition == null) {
            if (other.fkKomposition != null)
                return false;
        }
        else if (!this.fkKomposition.equals(other.fkKomposition))
            return false;
        if (this.stimmlage == null) {
            if (other.stimmlage != null)
                return false;
        }
        else if (!this.stimmlage.equals(other.stimmlage))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fkKomposition == null) ? 0 : this.fkKomposition.hashCode());
        result = prime * result + ((this.stimmlage == null) ? 0 : this.stimmlage.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NotenPdf (");

        sb.append(id);
        sb.append(", ").append(fkKomposition);
        sb.append(", ").append(stimmlage);

        sb.append(")");
        return sb.toString();
    }
}
