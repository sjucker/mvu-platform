/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.records;


import ch.mvurdorf.platform.jooq.tables.InstrumentPermission;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InstrumentPermissionRecord extends UpdatableRecordImpl<InstrumentPermissionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.instrument_permission.fk_login</code>.
     */
    public void setFkLogin(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.instrument_permission.fk_login</code>.
     */
    public Long getFkLogin() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.instrument_permission.instrument</code>.
     */
    public void setInstrument(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.instrument_permission.instrument</code>.
     */
    public String getInstrument() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InstrumentPermissionRecord
     */
    public InstrumentPermissionRecord() {
        super(InstrumentPermission.INSTRUMENT_PERMISSION);
    }

    /**
     * Create a detached, initialised InstrumentPermissionRecord
     */
    public InstrumentPermissionRecord(Long fkLogin, String instrument) {
        super(InstrumentPermission.INSTRUMENT_PERMISSION);

        setFkLogin(fkLogin);
        setInstrument(instrument);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InstrumentPermissionRecord
     */
    public InstrumentPermissionRecord(ch.mvurdorf.platform.jooq.tables.pojos.InstrumentPermission value) {
        super(InstrumentPermission.INSTRUMENT_PERMISSION);

        if (value != null) {
            setFkLogin(value.getFkLogin());
            setInstrument(value.getInstrument());
            resetChangedOnNotNull();
        }
    }
}
