/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.RepertoireEntry;
import ch.mvurdorf.platform.jooq.tables.records.RepertoireEntryRecord;

import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class RepertoireEntryDao extends AbstractSpringDAOImpl<RepertoireEntryRecord, ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry, Long> {

    /**
     * Create a new RepertoireEntryDao without any configuration
     */
    public RepertoireEntryDao() {
        super(RepertoireEntry.REPERTOIRE_ENTRY, ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry.class);
    }

    /**
     * Create a new RepertoireEntryDao with an attached configuration
     */
    @Autowired
    public RepertoireEntryDao(Configuration configuration) {
        super(RepertoireEntry.REPERTOIRE_ENTRY, ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry.class, configuration);
    }

    @Override
    public Long getId(ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RepertoireEntry.REPERTOIRE_ENTRY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchById(Long... values) {
        return fetch(RepertoireEntry.REPERTOIRE_ENTRY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry fetchOneById(Long value) {
        return fetchOne(RepertoireEntry.REPERTOIRE_ENTRY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchOptionalById(Long value) {
        return fetchOptional(RepertoireEntry.REPERTOIRE_ENTRY.ID, value);
    }

    /**
     * Fetch records that have <code>fk_repertoire BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchRangeOfFkRepertoire(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RepertoireEntry.REPERTOIRE_ENTRY.FK_REPERTOIRE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_repertoire IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchByFkRepertoire(Long... values) {
        return fetch(RepertoireEntry.REPERTOIRE_ENTRY.FK_REPERTOIRE, values);
    }

    /**
     * Fetch records that have <code>fk_komposition BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchRangeOfFkKomposition(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RepertoireEntry.REPERTOIRE_ENTRY.FK_KOMPOSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_komposition IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchByFkKomposition(Long... values) {
        return fetch(RepertoireEntry.REPERTOIRE_ENTRY.FK_KOMPOSITION, values);
    }

    /**
     * Fetch records that have <code>number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchRangeOfNumber(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(RepertoireEntry.REPERTOIRE_ENTRY.NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>number IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.RepertoireEntry> fetchByNumber(BigDecimal... values) {
        return fetch(RepertoireEntry.REPERTOIRE_ENTRY.NUMBER, values);
    }
}
