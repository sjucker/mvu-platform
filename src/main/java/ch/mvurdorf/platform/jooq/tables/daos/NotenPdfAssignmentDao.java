/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.NotenPdfAssignment;
import ch.mvurdorf.platform.jooq.tables.records.NotenPdfAssignmentRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class NotenPdfAssignmentDao extends AbstractSpringDAOImpl<NotenPdfAssignmentRecord, ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment, Long> {

    /**
     * Create a new NotenPdfAssignmentDao without any configuration
     */
    public NotenPdfAssignmentDao() {
        super(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT, ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment.class);
    }

    /**
     * Create a new NotenPdfAssignmentDao with an attached configuration
     */
    @Autowired
    public NotenPdfAssignmentDao(Configuration configuration) {
        super(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT, ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment.class, configuration);
    }

    @Override
    public Long getId(ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchById(Long... values) {
        return fetch(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment fetchOneById(Long value) {
        return fetchOne(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchOptionalById(Long value) {
        return fetchOptional(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.ID, value);
    }

    /**
     * Fetch records that have <code>fk_noten_pdf BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchRangeOfFkNotenPdf(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.FK_NOTEN_PDF, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_noten_pdf IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchByFkNotenPdf(Long... values) {
        return fetch(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.FK_NOTEN_PDF, values);
    }

    /**
     * Fetch records that have <code>instrument BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchRangeOfInstrument(String lowerInclusive, String upperInclusive) {
        return fetchRange(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.INSTRUMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>instrument IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchByInstrument(String... values) {
        return fetch(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.INSTRUMENT, values);
    }

    /**
     * Fetch records that have <code>stimme BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchRangeOfStimme(String lowerInclusive, String upperInclusive) {
        return fetchRange(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.STIMME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stimme IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.NotenPdfAssignment> fetchByStimme(String... values) {
        return fetch(NotenPdfAssignment.NOTEN_PDF_ASSIGNMENT.STIMME, values);
    }
}
