/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.records;


import ch.mvurdorf.platform.jooq.tables.Event;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.event.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.event.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.event.from_date</code>.
     */
    public void setFromDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.event.from_date</code>.
     */
    public LocalDate getFromDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.event.from_time</code>.
     */
    public void setFromTime(LocalTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.event.from_time</code>.
     */
    public LocalTime getFromTime() {
        return (LocalTime) get(2);
    }

    /**
     * Setter for <code>public.event.to_date</code>.
     */
    public void setToDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.event.to_date</code>.
     */
    public LocalDate getToDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.event.to_time</code>.
     */
    public void setToTime(LocalTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.event.to_time</code>.
     */
    public LocalTime getToTime() {
        return (LocalTime) get(4);
    }

    /**
     * Setter for <code>public.event.approximately</code>.
     */
    public void setApproximately(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.event.approximately</code>.
     */
    public Boolean getApproximately() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.event.title</code>.
     */
    public void setTitle(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.event.title</code>.
     */
    public String getTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.event.description</code>.
     */
    public void setDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.event.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.event.location</code>.
     */
    public void setLocation(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.event.location</code>.
     */
    public String getLocation() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.event.interna</code>.
     */
    public void setInterna(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.event.interna</code>.
     */
    public String getInterna() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.event.literature</code>.
     */
    public void setLiterature(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.event.literature</code>.
     */
    public String getLiterature() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.event.type</code>.
     */
    public void setType(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.event.type</code>.
     */
    public String getType() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.event.relevant_for_absenz</code>.
     */
    public void setRelevantForAbsenz(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.event.relevant_for_absenz</code>.
     */
    public Boolean getRelevantForAbsenz() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.event.relevant_for_website</code>.
     */
    public void setRelevantForWebsite(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.event.relevant_for_website</code>.
     */
    public Boolean getRelevantForWebsite() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>public.event.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.event.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>public.event.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.event.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.event.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.event.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>public.event.next_version</code>.
     */
    public void setNextVersion(Long value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.event.next_version</code>.
     */
    public Long getNextVersion() {
        return (Long) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Long id, LocalDate fromDate, LocalTime fromTime, LocalDate toDate, LocalTime toTime, Boolean approximately, String title, String description, String location, String interna, String literature, String type, Boolean relevantForAbsenz, Boolean relevantForWebsite, LocalDateTime createdAt, String createdBy, LocalDateTime deletedAt, Long nextVersion) {
        super(Event.EVENT);

        setId(id);
        setFromDate(fromDate);
        setFromTime(fromTime);
        setToDate(toDate);
        setToTime(toTime);
        setApproximately(approximately);
        setTitle(title);
        setDescription(description);
        setLocation(location);
        setInterna(interna);
        setLiterature(literature);
        setType(type);
        setRelevantForAbsenz(relevantForAbsenz);
        setRelevantForWebsite(relevantForWebsite);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setDeletedAt(deletedAt);
        setNextVersion(nextVersion);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(ch.mvurdorf.platform.jooq.tables.pojos.Event value) {
        super(Event.EVENT);

        if (value != null) {
            setId(value.getId());
            setFromDate(value.getFromDate());
            setFromTime(value.getFromTime());
            setToDate(value.getToDate());
            setToTime(value.getToTime());
            setApproximately(value.getApproximately());
            setTitle(value.getTitle());
            setDescription(value.getDescription());
            setLocation(value.getLocation());
            setInterna(value.getInterna());
            setLiterature(value.getLiterature());
            setType(value.getType());
            setRelevantForAbsenz(value.getRelevantForAbsenz());
            setRelevantForWebsite(value.getRelevantForWebsite());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setDeletedAt(value.getDeletedAt());
            setNextVersion(value.getNextVersion());
            resetChangedOnNotNull();
        }
    }
}
