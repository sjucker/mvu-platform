/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Event implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDate fromDate;
    private LocalTime fromTime;
    private LocalDate toDate;
    private LocalTime toTime;
    private Boolean approximately;
    private String title;
    private String description;
    private String location;
    private String interna;
    private String literature;
    private String type;
    private Boolean relevantForAbsenz;
    private Boolean relevantForWebsite;
    private LocalDateTime createdAt;
    private String createdBy;
    private LocalDateTime deletedAt;
    private Long nextVersion;

    public Event() {}

    public Event(Event value) {
        this.id = value.id;
        this.fromDate = value.fromDate;
        this.fromTime = value.fromTime;
        this.toDate = value.toDate;
        this.toTime = value.toTime;
        this.approximately = value.approximately;
        this.title = value.title;
        this.description = value.description;
        this.location = value.location;
        this.interna = value.interna;
        this.literature = value.literature;
        this.type = value.type;
        this.relevantForAbsenz = value.relevantForAbsenz;
        this.relevantForWebsite = value.relevantForWebsite;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.deletedAt = value.deletedAt;
        this.nextVersion = value.nextVersion;
    }

    public Event(
        Long id,
        LocalDate fromDate,
        LocalTime fromTime,
        LocalDate toDate,
        LocalTime toTime,
        Boolean approximately,
        String title,
        String description,
        String location,
        String interna,
        String literature,
        String type,
        Boolean relevantForAbsenz,
        Boolean relevantForWebsite,
        LocalDateTime createdAt,
        String createdBy,
        LocalDateTime deletedAt,
        Long nextVersion
    ) {
        this.id = id;
        this.fromDate = fromDate;
        this.fromTime = fromTime;
        this.toDate = toDate;
        this.toTime = toTime;
        this.approximately = approximately;
        this.title = title;
        this.description = description;
        this.location = location;
        this.interna = interna;
        this.literature = literature;
        this.type = type;
        this.relevantForAbsenz = relevantForAbsenz;
        this.relevantForWebsite = relevantForWebsite;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.deletedAt = deletedAt;
        this.nextVersion = nextVersion;
    }

    /**
     * Getter for <code>public.event.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.event.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.event.from_date</code>.
     */
    public LocalDate getFromDate() {
        return this.fromDate;
    }

    /**
     * Setter for <code>public.event.from_date</code>.
     */
    public void setFromDate(LocalDate fromDate) {
        this.fromDate = fromDate;
    }

    /**
     * Getter for <code>public.event.from_time</code>.
     */
    public LocalTime getFromTime() {
        return this.fromTime;
    }

    /**
     * Setter for <code>public.event.from_time</code>.
     */
    public void setFromTime(LocalTime fromTime) {
        this.fromTime = fromTime;
    }

    /**
     * Getter for <code>public.event.to_date</code>.
     */
    public LocalDate getToDate() {
        return this.toDate;
    }

    /**
     * Setter for <code>public.event.to_date</code>.
     */
    public void setToDate(LocalDate toDate) {
        this.toDate = toDate;
    }

    /**
     * Getter for <code>public.event.to_time</code>.
     */
    public LocalTime getToTime() {
        return this.toTime;
    }

    /**
     * Setter for <code>public.event.to_time</code>.
     */
    public void setToTime(LocalTime toTime) {
        this.toTime = toTime;
    }

    /**
     * Getter for <code>public.event.approximately</code>.
     */
    public Boolean getApproximately() {
        return this.approximately;
    }

    /**
     * Setter for <code>public.event.approximately</code>.
     */
    public void setApproximately(Boolean approximately) {
        this.approximately = approximately;
    }

    /**
     * Getter for <code>public.event.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>public.event.title</code>.
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>public.event.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.event.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>public.event.location</code>.
     */
    public String getLocation() {
        return this.location;
    }

    /**
     * Setter for <code>public.event.location</code>.
     */
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Getter for <code>public.event.interna</code>.
     */
    public String getInterna() {
        return this.interna;
    }

    /**
     * Setter for <code>public.event.interna</code>.
     */
    public void setInterna(String interna) {
        this.interna = interna;
    }

    /**
     * Getter for <code>public.event.literature</code>.
     */
    public String getLiterature() {
        return this.literature;
    }

    /**
     * Setter for <code>public.event.literature</code>.
     */
    public void setLiterature(String literature) {
        this.literature = literature;
    }

    /**
     * Getter for <code>public.event.type</code>.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>public.event.type</code>.
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for <code>public.event.relevant_for_absenz</code>.
     */
    public Boolean getRelevantForAbsenz() {
        return this.relevantForAbsenz;
    }

    /**
     * Setter for <code>public.event.relevant_for_absenz</code>.
     */
    public void setRelevantForAbsenz(Boolean relevantForAbsenz) {
        this.relevantForAbsenz = relevantForAbsenz;
    }

    /**
     * Getter for <code>public.event.relevant_for_website</code>.
     */
    public Boolean getRelevantForWebsite() {
        return this.relevantForWebsite;
    }

    /**
     * Setter for <code>public.event.relevant_for_website</code>.
     */
    public void setRelevantForWebsite(Boolean relevantForWebsite) {
        this.relevantForWebsite = relevantForWebsite;
    }

    /**
     * Getter for <code>public.event.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.event.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.event.created_by</code>.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>public.event.created_by</code>.
     */
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Getter for <code>public.event.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Setter for <code>public.event.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for <code>public.event.next_version</code>.
     */
    public Long getNextVersion() {
        return this.nextVersion;
    }

    /**
     * Setter for <code>public.event.next_version</code>.
     */
    public void setNextVersion(Long nextVersion) {
        this.nextVersion = nextVersion;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Event other = (Event) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fromDate == null) {
            if (other.fromDate != null)
                return false;
        }
        else if (!this.fromDate.equals(other.fromDate))
            return false;
        if (this.fromTime == null) {
            if (other.fromTime != null)
                return false;
        }
        else if (!this.fromTime.equals(other.fromTime))
            return false;
        if (this.toDate == null) {
            if (other.toDate != null)
                return false;
        }
        else if (!this.toDate.equals(other.toDate))
            return false;
        if (this.toTime == null) {
            if (other.toTime != null)
                return false;
        }
        else if (!this.toTime.equals(other.toTime))
            return false;
        if (this.approximately == null) {
            if (other.approximately != null)
                return false;
        }
        else if (!this.approximately.equals(other.approximately))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.location == null) {
            if (other.location != null)
                return false;
        }
        else if (!this.location.equals(other.location))
            return false;
        if (this.interna == null) {
            if (other.interna != null)
                return false;
        }
        else if (!this.interna.equals(other.interna))
            return false;
        if (this.literature == null) {
            if (other.literature != null)
                return false;
        }
        else if (!this.literature.equals(other.literature))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.relevantForAbsenz == null) {
            if (other.relevantForAbsenz != null)
                return false;
        }
        else if (!this.relevantForAbsenz.equals(other.relevantForAbsenz))
            return false;
        if (this.relevantForWebsite == null) {
            if (other.relevantForWebsite != null)
                return false;
        }
        else if (!this.relevantForWebsite.equals(other.relevantForWebsite))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.nextVersion == null) {
            if (other.nextVersion != null)
                return false;
        }
        else if (!this.nextVersion.equals(other.nextVersion))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fromDate == null) ? 0 : this.fromDate.hashCode());
        result = prime * result + ((this.fromTime == null) ? 0 : this.fromTime.hashCode());
        result = prime * result + ((this.toDate == null) ? 0 : this.toDate.hashCode());
        result = prime * result + ((this.toTime == null) ? 0 : this.toTime.hashCode());
        result = prime * result + ((this.approximately == null) ? 0 : this.approximately.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.location == null) ? 0 : this.location.hashCode());
        result = prime * result + ((this.interna == null) ? 0 : this.interna.hashCode());
        result = prime * result + ((this.literature == null) ? 0 : this.literature.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.relevantForAbsenz == null) ? 0 : this.relevantForAbsenz.hashCode());
        result = prime * result + ((this.relevantForWebsite == null) ? 0 : this.relevantForWebsite.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.nextVersion == null) ? 0 : this.nextVersion.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Event (");

        sb.append(id);
        sb.append(", ").append(fromDate);
        sb.append(", ").append(fromTime);
        sb.append(", ").append(toDate);
        sb.append(", ").append(toTime);
        sb.append(", ").append(approximately);
        sb.append(", ").append(title);
        sb.append(", ").append(description);
        sb.append(", ").append(location);
        sb.append(", ").append(interna);
        sb.append(", ").append(literature);
        sb.append(", ").append(type);
        sb.append(", ").append(relevantForAbsenz);
        sb.append(", ").append(relevantForWebsite);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(nextVersion);

        sb.append(")");
        return sb.toString();
    }
}
