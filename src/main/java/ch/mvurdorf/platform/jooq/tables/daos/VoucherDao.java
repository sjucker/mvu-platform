/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.Voucher;
import ch.mvurdorf.platform.jooq.tables.records.VoucherRecord;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class VoucherDao extends AbstractSpringDAOImpl<VoucherRecord, ch.mvurdorf.platform.jooq.tables.pojos.Voucher, Long> {

    /**
     * Create a new VoucherDao without any configuration
     */
    public VoucherDao() {
        super(Voucher.VOUCHER, ch.mvurdorf.platform.jooq.tables.pojos.Voucher.class);
    }

    /**
     * Create a new VoucherDao with an attached configuration
     */
    @Autowired
    public VoucherDao(Configuration configuration) {
        super(Voucher.VOUCHER, ch.mvurdorf.platform.jooq.tables.pojos.Voucher.class, configuration);
    }

    @Override
    public Long getId(ch.mvurdorf.platform.jooq.tables.pojos.Voucher object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Voucher.VOUCHER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchById(Long... values) {
        return fetch(Voucher.VOUCHER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.Voucher fetchOneById(Long value) {
        return fetchOne(Voucher.VOUCHER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchOptionalById(Long value) {
        return fetchOptional(Voucher.VOUCHER.ID, value);
    }

    /**
     * Fetch records that have <code>code_prefix BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchRangeOfCodePrefix(String lowerInclusive, String upperInclusive) {
        return fetchRange(Voucher.VOUCHER.CODE_PREFIX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code_prefix IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchByCodePrefix(String... values) {
        return fetch(Voucher.VOUCHER.CODE_PREFIX, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Voucher.VOUCHER.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchByDescription(String... values) {
        return fetch(Voucher.VOUCHER.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>valid_until BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchRangeOfValidUntil(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Voucher.VOUCHER.VALID_UNTIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>valid_until IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Voucher> fetchByValidUntil(LocalDate... values) {
        return fetch(Voucher.VOUCHER.VALID_UNTIL, values);
    }
}
