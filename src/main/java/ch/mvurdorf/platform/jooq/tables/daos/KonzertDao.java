/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.Konzert;
import ch.mvurdorf.platform.jooq.tables.records.KonzertRecord;

import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class KonzertDao extends AbstractSpringDAOImpl<KonzertRecord, ch.mvurdorf.platform.jooq.tables.pojos.Konzert, Long> {

    /**
     * Create a new KonzertDao without any configuration
     */
    public KonzertDao() {
        super(Konzert.KONZERT, ch.mvurdorf.platform.jooq.tables.pojos.Konzert.class);
    }

    /**
     * Create a new KonzertDao with an attached configuration
     */
    @Autowired
    public KonzertDao(Configuration configuration) {
        super(Konzert.KONZERT, ch.mvurdorf.platform.jooq.tables.pojos.Konzert.class, configuration);
    }

    @Override
    public Long getId(ch.mvurdorf.platform.jooq.tables.pojos.Konzert object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Konzert.KONZERT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchById(Long... values) {
        return fetch(Konzert.KONZERT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.Konzert fetchOneById(Long value) {
        return fetchOne(Konzert.KONZERT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchOptionalById(Long value) {
        return fetchOptional(Konzert.KONZERT.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Konzert.KONZERT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchByName(String... values) {
        return fetch(Konzert.KONZERT.NAME, values);
    }

    /**
     * Fetch records that have <code>datum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchRangeOfDatum(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Konzert.KONZERT.DATUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datum IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchByDatum(LocalDate... values) {
        return fetch(Konzert.KONZERT.DATUM, values);
    }

    /**
     * Fetch records that have <code>zeit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchRangeOfZeit(LocalTime lowerInclusive, LocalTime upperInclusive) {
        return fetchRange(Konzert.KONZERT.ZEIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>zeit IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchByZeit(LocalTime... values) {
        return fetch(Konzert.KONZERT.ZEIT, values);
    }

    /**
     * Fetch records that have <code>location BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchRangeOfLocation(String lowerInclusive, String upperInclusive) {
        return fetchRange(Konzert.KONZERT.LOCATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchByLocation(String... values) {
        return fetch(Konzert.KONZERT.LOCATION, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Konzert.KONZERT.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Konzert> fetchByDescription(String... values) {
        return fetch(Konzert.KONZERT.DESCRIPTION, values);
    }
}
