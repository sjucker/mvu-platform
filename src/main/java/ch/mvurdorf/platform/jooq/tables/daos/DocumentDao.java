/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.Document;
import ch.mvurdorf.platform.jooq.tables.records.DocumentRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class DocumentDao extends AbstractSpringDAOImpl<DocumentRecord, ch.mvurdorf.platform.jooq.tables.pojos.Document, Long> {

    /**
     * Create a new DocumentDao without any configuration
     */
    public DocumentDao() {
        super(Document.DOCUMENT, ch.mvurdorf.platform.jooq.tables.pojos.Document.class);
    }

    /**
     * Create a new DocumentDao with an attached configuration
     */
    @Autowired
    public DocumentDao(Configuration configuration) {
        super(Document.DOCUMENT, ch.mvurdorf.platform.jooq.tables.pojos.Document.class, configuration);
    }

    @Override
    public Long getId(ch.mvurdorf.platform.jooq.tables.pojos.Document object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Document.DOCUMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchById(Long... values) {
        return fetch(Document.DOCUMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.Document fetchOneById(Long value) {
        return fetchOne(Document.DOCUMENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchOptionalById(Long value) {
        return fetchOptional(Document.DOCUMENT.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Document.DOCUMENT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchByName(String... values) {
        return fetch(Document.DOCUMENT.NAME, values);
    }

    /**
     * Fetch records that have <code>file_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchRangeOfFileType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Document.DOCUMENT.FILE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_type IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchByFileType(String... values) {
        return fetch(Document.DOCUMENT.FILE_TYPE, values);
    }

    /**
     * Fetch records that have <code>upload_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchRangeOfUploadDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Document.DOCUMENT.UPLOAD_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>upload_date IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchByUploadDate(LocalDateTime... values) {
        return fetch(Document.DOCUMENT.UPLOAD_DATE, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Document.DOCUMENT.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Document> fetchByDescription(String... values) {
        return fetch(Document.DOCUMENT.DESCRIPTION, values);
    }
}
