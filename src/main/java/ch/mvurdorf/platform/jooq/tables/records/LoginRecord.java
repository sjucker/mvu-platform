/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.records;


import ch.mvurdorf.platform.jooq.tables.Login;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LoginRecord extends UpdatableRecordImpl<LoginRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.login.email</code>.
     */
    public void setEmail(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.login.email</code>.
     */
    public String getEmail() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.login.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.login.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.login.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.login.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.login.active</code>.
     */
    public void setActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.login.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LoginRecord
     */
    public LoginRecord() {
        super(Login.LOGIN);
    }

    /**
     * Create a detached, initialised LoginRecord
     */
    public LoginRecord(String email, String name, String password, Boolean active) {
        super(Login.LOGIN);

        setEmail(email);
        setName(name);
        setPassword(password);
        setActive(active);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LoginRecord
     */
    public LoginRecord(ch.mvurdorf.platform.jooq.tables.pojos.Login value) {
        super(Login.LOGIN);

        if (value != null) {
            setEmail(value.getEmail());
            setName(value.getName());
            setPassword(value.getPassword());
            setActive(value.getActive());
            resetChangedOnNotNull();
        }
    }
}
