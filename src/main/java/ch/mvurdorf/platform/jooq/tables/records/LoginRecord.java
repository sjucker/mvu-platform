/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.records;


import ch.mvurdorf.platform.jooq.tables.Login;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LoginRecord extends UpdatableRecordImpl<LoginRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.login.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.login.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.login.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.login.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.login.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.login.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.login.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.login.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.login.active</code>.
     */
    public void setActive(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.login.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.login.last_login</code>.
     */
    public void setLastLogin(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.login.last_login</code>.
     */
    public LocalDateTime getLastLogin() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.login.users_permission</code>.
     */
    public void setUsersPermission(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.login.users_permission</code>.
     */
    public String getUsersPermission() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.login.noten_permission</code>.
     */
    public void setNotenPermission(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.login.noten_permission</code>.
     */
    public String getNotenPermission() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LoginRecord
     */
    public LoginRecord() {
        super(Login.LOGIN);
    }

    /**
     * Create a detached, initialised LoginRecord
     */
    public LoginRecord(Long id, String email, String name, String password, Boolean active, LocalDateTime lastLogin, String usersPermission, String notenPermission) {
        super(Login.LOGIN);

        setId(id);
        setEmail(email);
        setName(name);
        setPassword(password);
        setActive(active);
        setLastLogin(lastLogin);
        setUsersPermission(usersPermission);
        setNotenPermission(notenPermission);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LoginRecord
     */
    public LoginRecord(ch.mvurdorf.platform.jooq.tables.pojos.Login value) {
        super(Login.LOGIN);

        if (value != null) {
            setId(value.getId());
            setEmail(value.getEmail());
            setName(value.getName());
            setPassword(value.getPassword());
            setActive(value.getActive());
            setLastLogin(value.getLastLogin());
            setUsersPermission(value.getUsersPermission());
            setNotenPermission(value.getNotenPermission());
            resetChangedOnNotNull();
        }
    }
}
