/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.AbsenzStatus;
import ch.mvurdorf.platform.jooq.tables.records.AbsenzStatusRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class AbsenzStatusDao extends AbstractSpringDAOImpl<AbsenzStatusRecord, ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus, Record2<Long, Long>> {

    /**
     * Create a new AbsenzStatusDao without any configuration
     */
    public AbsenzStatusDao() {
        super(AbsenzStatus.ABSENZ_STATUS, ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus.class);
    }

    /**
     * Create a new AbsenzStatusDao with an attached configuration
     */
    @Autowired
    public AbsenzStatusDao(Configuration configuration) {
        super(AbsenzStatus.ABSENZ_STATUS, ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus object) {
        return compositeKeyRecord(object.getFkLogin(), object.getFkEvent());
    }

    /**
     * Fetch records that have <code>fk_login BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchRangeOfFkLogin(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AbsenzStatus.ABSENZ_STATUS.FK_LOGIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_login IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchByFkLogin(Long... values) {
        return fetch(AbsenzStatus.ABSENZ_STATUS.FK_LOGIN, values);
    }

    /**
     * Fetch records that have <code>fk_event BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchRangeOfFkEvent(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AbsenzStatus.ABSENZ_STATUS.FK_EVENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_event IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchByFkEvent(Long... values) {
        return fetch(AbsenzStatus.ABSENZ_STATUS.FK_EVENT, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(AbsenzStatus.ABSENZ_STATUS.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchByRemark(String... values) {
        return fetch(AbsenzStatus.ABSENZ_STATUS.REMARK, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(AbsenzStatus.ABSENZ_STATUS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.AbsenzStatus> fetchByStatus(String... values) {
        return fetch(AbsenzStatus.ABSENZ_STATUS.STATUS, values);
    }
}
