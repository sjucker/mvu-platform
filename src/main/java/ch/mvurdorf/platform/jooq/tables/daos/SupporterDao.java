/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.daos;


import ch.mvurdorf.platform.jooq.AbstractSpringDAOImpl;
import ch.mvurdorf.platform.jooq.tables.Supporter;
import ch.mvurdorf.platform.jooq.tables.records.SupporterRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class SupporterDao extends AbstractSpringDAOImpl<SupporterRecord, ch.mvurdorf.platform.jooq.tables.pojos.Supporter, Long> {

    /**
     * Create a new SupporterDao without any configuration
     */
    public SupporterDao() {
        super(Supporter.SUPPORTER, ch.mvurdorf.platform.jooq.tables.pojos.Supporter.class);
    }

    /**
     * Create a new SupporterDao with an attached configuration
     */
    @Autowired
    public SupporterDao(Configuration configuration) {
        super(Supporter.SUPPORTER, ch.mvurdorf.platform.jooq.tables.pojos.Supporter.class, configuration);
    }

    @Override
    public Long getId(ch.mvurdorf.platform.jooq.tables.pojos.Supporter object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchById(Long... values) {
        return fetch(Supporter.SUPPORTER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.Supporter fetchOneById(Long value) {
        return fetchOne(Supporter.SUPPORTER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchOptionalById(Long value) {
        return fetchOptional(Supporter.SUPPORTER.ID, value);
    }

    /**
     * Fetch records that have <code>vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vorname IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByVorname(String... values) {
        return fetch(Supporter.SUPPORTER.VORNAME, values);
    }

    /**
     * Fetch records that have <code>nachname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfNachname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.NACHNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nachname IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByNachname(String... values) {
        return fetch(Supporter.SUPPORTER.NACHNAME, values);
    }

    /**
     * Fetch records that have <code>strasse BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfStrasse(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.STRASSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>strasse IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByStrasse(String... values) {
        return fetch(Supporter.SUPPORTER.STRASSE, values);
    }

    /**
     * Fetch records that have <code>ort BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfOrt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.ORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ort IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByOrt(String... values) {
        return fetch(Supporter.SUPPORTER.ORT, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByEmail(String... values) {
        return fetch(Supporter.SUPPORTER.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public ch.mvurdorf.platform.jooq.tables.pojos.Supporter fetchOneByEmail(String value) {
        return fetchOne(Supporter.SUPPORTER.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchOptionalByEmail(String value) {
        return fetchOptional(Supporter.SUPPORTER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>bemerkung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfBemerkung(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.BEMERKUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bemerkung IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByBemerkung(String... values) {
        return fetch(Supporter.SUPPORTER.BEMERKUNG, values);
    }

    /**
     * Fetch records that have <code>kommunikation_post BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfKommunikationPost(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.KOMMUNIKATION_POST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>kommunikation_post IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByKommunikationPost(Boolean... values) {
        return fetch(Supporter.SUPPORTER.KOMMUNIKATION_POST, values);
    }

    /**
     * Fetch records that have <code>kommunikation_email BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfKommunikationEmail(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.KOMMUNIKATION_EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>kommunikation_email IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByKommunikationEmail(Boolean... values) {
        return fetch(Supporter.SUPPORTER.KOMMUNIKATION_EMAIL, values);
    }

    /**
     * Fetch records that have <code>registered_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfRegisteredAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.REGISTERED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>registered_at IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByRegisteredAt(LocalDateTime... values) {
        return fetch(Supporter.SUPPORTER.REGISTERED_AT, values);
    }

    /**
     * Fetch records that have <code>external_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfExternalId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.EXTERNAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>external_id IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByExternalId(Long... values) {
        return fetch(Supporter.SUPPORTER.EXTERNAL_ID, values);
    }

    /**
     * Fetch records that have <code>anrede BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfAnrede(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.ANREDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>anrede IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByAnrede(String... values) {
        return fetch(Supporter.SUPPORTER.ANREDE, values);
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfUuid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByUuid(String... values) {
        return fetch(Supporter.SUPPORTER.UUID, values);
    }

    /**
     * Fetch records that have <code>plz BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfPlz(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.PLZ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plz IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByPlz(String... values) {
        return fetch(Supporter.SUPPORTER.PLZ, values);
    }

    /**
     * Fetch records that have <code>strasse_nr BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfStrasseNr(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.STRASSE_NR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>strasse_nr IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByStrasseNr(String... values) {
        return fetch(Supporter.SUPPORTER.STRASSE_NR, values);
    }

    /**
     * Fetch records that have <code>country_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfCountryCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.COUNTRY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country_code IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByCountryCode(String... values) {
        return fetch(Supporter.SUPPORTER.COUNTRY_CODE, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Supporter.SUPPORTER.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<ch.mvurdorf.platform.jooq.tables.pojos.Supporter> fetchByType(String... values) {
        return fetch(Supporter.SUPPORTER.TYPE, values);
    }
}
