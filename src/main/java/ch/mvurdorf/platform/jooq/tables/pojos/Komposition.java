/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Komposition implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String titel;
    private String komponist;
    private String arrangeur;
    private String format;
    private String audioSample;
    private String comment;

    public Komposition() {}

    public Komposition(Komposition value) {
        this.id = value.id;
        this.titel = value.titel;
        this.komponist = value.komponist;
        this.arrangeur = value.arrangeur;
        this.format = value.format;
        this.audioSample = value.audioSample;
        this.comment = value.comment;
    }

    public Komposition(
        Long id,
        String titel,
        String komponist,
        String arrangeur,
        String format,
        String audioSample,
        String comment
    ) {
        this.id = id;
        this.titel = titel;
        this.komponist = komponist;
        this.arrangeur = arrangeur;
        this.format = format;
        this.audioSample = audioSample;
        this.comment = comment;
    }

    /**
     * Getter for <code>public.komposition.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.komposition.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.komposition.titel</code>.
     */
    public String getTitel() {
        return this.titel;
    }

    /**
     * Setter for <code>public.komposition.titel</code>.
     */
    public void setTitel(String titel) {
        this.titel = titel;
    }

    /**
     * Getter for <code>public.komposition.komponist</code>.
     */
    public String getKomponist() {
        return this.komponist;
    }

    /**
     * Setter for <code>public.komposition.komponist</code>.
     */
    public void setKomponist(String komponist) {
        this.komponist = komponist;
    }

    /**
     * Getter for <code>public.komposition.arrangeur</code>.
     */
    public String getArrangeur() {
        return this.arrangeur;
    }

    /**
     * Setter for <code>public.komposition.arrangeur</code>.
     */
    public void setArrangeur(String arrangeur) {
        this.arrangeur = arrangeur;
    }

    /**
     * Getter for <code>public.komposition.format</code>.
     */
    public String getFormat() {
        return this.format;
    }

    /**
     * Setter for <code>public.komposition.format</code>.
     */
    public void setFormat(String format) {
        this.format = format;
    }

    /**
     * Getter for <code>public.komposition.audio_sample</code>.
     */
    public String getAudioSample() {
        return this.audioSample;
    }

    /**
     * Setter for <code>public.komposition.audio_sample</code>.
     */
    public void setAudioSample(String audioSample) {
        this.audioSample = audioSample;
    }

    /**
     * Getter for <code>public.komposition.comment</code>.
     */
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>public.komposition.comment</code>.
     */
    public void setComment(String comment) {
        this.comment = comment;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Komposition other = (Komposition) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.titel == null) {
            if (other.titel != null)
                return false;
        }
        else if (!this.titel.equals(other.titel))
            return false;
        if (this.komponist == null) {
            if (other.komponist != null)
                return false;
        }
        else if (!this.komponist.equals(other.komponist))
            return false;
        if (this.arrangeur == null) {
            if (other.arrangeur != null)
                return false;
        }
        else if (!this.arrangeur.equals(other.arrangeur))
            return false;
        if (this.format == null) {
            if (other.format != null)
                return false;
        }
        else if (!this.format.equals(other.format))
            return false;
        if (this.audioSample == null) {
            if (other.audioSample != null)
                return false;
        }
        else if (!this.audioSample.equals(other.audioSample))
            return false;
        if (this.comment == null) {
            if (other.comment != null)
                return false;
        }
        else if (!this.comment.equals(other.comment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.titel == null) ? 0 : this.titel.hashCode());
        result = prime * result + ((this.komponist == null) ? 0 : this.komponist.hashCode());
        result = prime * result + ((this.arrangeur == null) ? 0 : this.arrangeur.hashCode());
        result = prime * result + ((this.format == null) ? 0 : this.format.hashCode());
        result = prime * result + ((this.audioSample == null) ? 0 : this.audioSample.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Komposition (");

        sb.append(id);
        sb.append(", ").append(titel);
        sb.append(", ").append(komponist);
        sb.append(", ").append(arrangeur);
        sb.append(", ").append(format);
        sb.append(", ").append(audioSample);
        sb.append(", ").append(comment);

        sb.append(")");
        return sb.toString();
    }
}
