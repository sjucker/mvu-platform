/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InstrumentPermission implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long fkLogin;
    private String instrument;

    public InstrumentPermission() {}

    public InstrumentPermission(InstrumentPermission value) {
        this.fkLogin = value.fkLogin;
        this.instrument = value.instrument;
    }

    public InstrumentPermission(
        Long fkLogin,
        String instrument
    ) {
        this.fkLogin = fkLogin;
        this.instrument = instrument;
    }

    /**
     * Getter for <code>public.instrument_permission.fk_login</code>.
     */
    public Long getFkLogin() {
        return this.fkLogin;
    }

    /**
     * Setter for <code>public.instrument_permission.fk_login</code>.
     */
    public void setFkLogin(Long fkLogin) {
        this.fkLogin = fkLogin;
    }

    /**
     * Getter for <code>public.instrument_permission.instrument</code>.
     */
    public String getInstrument() {
        return this.instrument;
    }

    /**
     * Setter for <code>public.instrument_permission.instrument</code>.
     */
    public void setInstrument(String instrument) {
        this.instrument = instrument;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final InstrumentPermission other = (InstrumentPermission) obj;
        if (this.fkLogin == null) {
            if (other.fkLogin != null)
                return false;
        }
        else if (!this.fkLogin.equals(other.fkLogin))
            return false;
        if (this.instrument == null) {
            if (other.instrument != null)
                return false;
        }
        else if (!this.instrument.equals(other.instrument))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fkLogin == null) ? 0 : this.fkLogin.hashCode());
        result = prime * result + ((this.instrument == null) ? 0 : this.instrument.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InstrumentPermission (");

        sb.append(fkLogin);
        sb.append(", ").append(instrument);

        sb.append(")");
        return sb.toString();
    }
}
