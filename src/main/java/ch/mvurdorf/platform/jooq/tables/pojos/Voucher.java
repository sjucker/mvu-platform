/*
 * This file is generated by jOOQ.
 */
package ch.mvurdorf.platform.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Voucher implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String codePrefix;
    private String description;
    private LocalDate validUntil;

    public Voucher() {}

    public Voucher(Voucher value) {
        this.id = value.id;
        this.codePrefix = value.codePrefix;
        this.description = value.description;
        this.validUntil = value.validUntil;
    }

    public Voucher(
        Long id,
        String codePrefix,
        String description,
        LocalDate validUntil
    ) {
        this.id = id;
        this.codePrefix = codePrefix;
        this.description = description;
        this.validUntil = validUntil;
    }

    /**
     * Getter for <code>public.voucher.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.voucher.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.voucher.code_prefix</code>.
     */
    public String getCodePrefix() {
        return this.codePrefix;
    }

    /**
     * Setter for <code>public.voucher.code_prefix</code>.
     */
    public void setCodePrefix(String codePrefix) {
        this.codePrefix = codePrefix;
    }

    /**
     * Getter for <code>public.voucher.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.voucher.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>public.voucher.valid_until</code>.
     */
    public LocalDate getValidUntil() {
        return this.validUntil;
    }

    /**
     * Setter for <code>public.voucher.valid_until</code>.
     */
    public void setValidUntil(LocalDate validUntil) {
        this.validUntil = validUntil;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Voucher other = (Voucher) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.codePrefix == null) {
            if (other.codePrefix != null)
                return false;
        }
        else if (!this.codePrefix.equals(other.codePrefix))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.validUntil == null) {
            if (other.validUntil != null)
                return false;
        }
        else if (!this.validUntil.equals(other.validUntil))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.codePrefix == null) ? 0 : this.codePrefix.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.validUntil == null) ? 0 : this.validUntil.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Voucher (");

        sb.append(id);
        sb.append(", ").append(codePrefix);
        sb.append(", ").append(description);
        sb.append(", ").append(validUntil);

        sb.append(")");
        return sb.toString();
    }
}
